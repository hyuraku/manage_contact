version: '3.4'
x-app: &app
  build:
    context: .
    dockerfile: ./.dockerdev/Dockerfile
    args:
      RUBY_VERSION: '2.7.5'
      PG_MAJOR: '12'
      NODE_MAJOR: '12'
      YARN_VERSION: '1.22.0'
      BUNDLER_VERSION: '1.17.3'
  environment: &env
    NODE_ENV: development
    RAILS_ENV: ${RAILS_ENV:-development}
  image: example-dev:1.1.0
  tmpfs:
    - /tmp

x-backend: &backend
  <<: *app
  stdin_open: true
  tty: true
  volumes:
    - .:/app:cached
    - rails_cache:/app/tmp/cache
    - bundle:/usr/local/bundle
    - node_modules:/app/node_modules
    - packs:/app/public/packs
  environment:
    <<: *env
    BOOTSNAP_CACHE_DIR: /usr/local/bundle/_bootsnap

    HISTFILE: /app/log/.bash_history
    PSQL_HISTFILE: /app/log/.psql_history
    EDITOR: vi
  depends_on:
    - db

services:
  runner:
    <<: *backend
    command: /bin/bash
    ports:
      - '3001:3001'
      - '3002:3002'

  rails:
    <<: *backend
    command: /bin/sh -c "rm -f /manageContact/tmp/pids/server.pid && bundle exec rails server -b 0.0.0.0"
    ports:
      - '3000:3000'
    volumes:
      - .:/manageContact

  db:
    image: postgres:11-alpine
    volumes:
      - postgres:/var/lib/postgresql/data
      - ./log:/root/log:cached
    environment:
      PSQL_HISTFILE: /root/log/.psql_history
      POSTGRES_PASSWORD: 'postgres'
    healthcheck:
      test: pg_isready -U postgres -h 127.0.0.1
      interval: 5s
  
  proxy:
    build: ./.dockerdev/nginx
    restart: always
    ports:
      - "80:80"
    depends_on:
      - rails

volumes:
  postgres:
  bundle:
  node_modules:
  rails_cache:
  packs:
